{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Header","header","CoinList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","textColor","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","id","state","name","src","symbol","toLowerCase","Chart","coinId","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","type","series","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","rank","description","total_supply","max_supply","path","element","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.7260bbcb.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a{\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    display: block;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.textColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string,\r\n  name: string,\r\n  symbol: string,\r\n  rank: number,\r\n  is_new: boolean,\r\n  is_active: boolean,\r\n  type: string,\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\r\n  //     const json = await response.json();\r\n  //     setCoins(json.slice(0, 100));\r\n  //     setLoading(false);\r\n  //   })();\r\n  // }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          코인\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>Coin</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinList>\r\n          {data?.slice(0,100).map(coin =>\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={`/react-for-beginners/${coin.id}`}\r\n                state={{\r\n                  name: coin.name,\r\n                }}\r\n              >\r\n                <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          )}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IChart {\r\n  coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: IChart) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: true },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: {\r\n                gradientToColors: [\"#0be881\"],\r\n                stops: [0, 100]\r\n              }\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$ ${value.toFixed(3)}`,\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","function Price() {\r\n  return <h1>Price</h1>;\r\n}\r\n\r\nexport default Price;","import { useParams, useLocation, useMatch, Routes, Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n};\r\n\r\ninterface RouteState {\r\n  name: string;\r\n};\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  // const [loading, setLoading] = useState(true);\r\n  // const [info, setInfo] = useState<InfoData>();\r\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n  const { coinId } = useParams() as RouteParams;\r\n  const { state } = useLocation();\r\n  const priceMatch = useMatch(\"/react-for-beginners/:coinId/price\");\r\n  const chartMatch = useMatch(\"/react-for-beginners/:coinId/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId], () => fetchCoinInfo(coinId));\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId], () => fetchCoinTickers(coinId),\r\n    { refetchInterval: 5000 }\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              {/* <span>{tickersData?.quotes.USD.price}</span> */}\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/react-for-beginners/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/react-for-beginners/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Routes>\r\n            <Route path=\"price\" element={<Price />} />\r\n            <Route path=\"chart\" element={<Chart coinId={coinId} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/react-for-beginners/:coinId/*\" element={<Coin/>} />\r\n        <Route path=\"/react-for-beginners/\" element={<Coins/>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { theme } from './theme';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#636e72\",\r\n  textColor: \"#ecf0f1\",\r\n  accentColor: \"#0984e3\"\r\n}"],"sourceRoot":""}